/*********************
BREAKPOINTS
*********************/
html:after {
  position: fixed;
  z-index: 99999;
  top: 50px;
  left: 0;
  background-color: white;
  color: black;
  outline: 1px solid red;
  text-align: center;
  padding: 1% 4%;
  font-family: 'monospace';
  font-size: 2em;
}

@media (max-width: 37.5em) {
  html:after {
    content: 'mobileonly';
  }
}

@media (min-width: 37.5em) {
  html:after {
    content: 'phablet';
  }
}

@media (min-width: 50em) {
  html:after {
    content: 'tablet';
  }
}

@media (min-width: 64em) {
  html:after {
    content: 'laptop';
  }
}

@media (min-width: 70em) {
  html:after {
    content: 'desktop';
  }
}

* {
  outline: 1px solid red;
  background-color: rgba(255, 0, 0, 0.2);
}

@font-face {
  font-family: "redacted";
  src: url("../fonts/redacted-regular.eot?") format("eot"), url("../fonts/redacted-regular.woff2") format("woff2"), url("../fonts/redacted-regular.woff") format("woff"), url("../fonts/redacted-regular.ttf") format("truetype"), url("../fonts/redacted-regular.svg#redacted") format("svg");
}

@font-face {
  font-family: "redacted-script";
  src: url("../fonts/redacted-script-regular.eot?") format("eot"), url("../fonts/redacted-script-regular.woff2") format("woff2"), url("../fonts/redacted-script-regular.woff") format("woff"), url("../fonts/redacted-script-regular.ttf") format("truetype"), url("../fonts/redacted-script-regular.svg#redacted-script") format("svg");
}

@font-face {
  font-family: "redacted-script-bold";
  font-weight: bold;
  src: url("../fonts/redacted-script-bold.eot?") format("eot"), url("../fonts/redacted-script-bold.woff2") format("woff2"), url("../fonts/redacted-script-bold.woff") format("woff"), url("../fonts/redacted-script-bold.ttf") format("truetype"), url("../fonts/redacted-script-bold.svg#redacted-script-bold") format("svg");
}

.parent,
.container,
.nav {
  display: flex;
  flex: 1 1 auto;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: space-around;
  align-items: center;
  align-content: stretch;
}

.padd {
  padding: 10px;
}

@media (min-width: 50em) {
  .padd {
    padding: 8px;
  }
}

@media (max-width: 37.5em) {
  .padd {
    padding: 4px;
  }
}

.row {
  flex-direction: row;
}

.row-rev {
  flex-direction: row-reverse;
}

.col {
  flex-direction: column;
}

.col-rev {
  flex-direction: column-reverse;
}

.wrap {
  flex-wrap: wrap;
}

.nowrap {
  flex-wrap: nowrap;
}

.start {
  justify-content: flex-start;
}

.end {
  justify-content: flex-end;
}

.centered {
  justify-content: center;
}

.space-bw {
  justify-content: space-between;
}

.space-around {
  justify-content: space-around;
}

.v-fill {
  align-items: stretch;
}

.v-start {
  align-items: flex-start;
}

.v-end {
  align-items: flex-end;
}

.v-center {
  align-items: center;
}

.v-base {
  align-items: baseline;
}

.mul-fill {
  align-content: stretch;
}

.mul-start {
  align-content: flex-start;
}

.mul-end {
  align-content: flex-end;
}

.mul-center {
  align-content: center;
}

.mul-space-bw {
  align-content: space-between;
}

.mul-space-around {
  align-content: space-around;
}

.c-align-start {
  align-self: flex-start;
}

.c-align-end {
  align-self: flex-end;
}

.c-align-center {
  align-self: center;
}

.c-align-base {
  align-self: baseline;
}

.c-align-stretch {
  align-self: stretch;
}

*:after,
*:before {
  box-sizing: border-box;
}

html {
  height: 100%;
  font-family: redacted;
}

@media (min-width: 37.5em) {
  html {
    font-size: 112% !important;
  }
}

@media (min-width: 70em) {
  html {
    font-size: 120% !important;
  }
}

@media (max-width: 37.5em) {
  html {
    font-size: 40% !important;
    line-height: 0.5rem;
  }
}

body {
  background-color: #fbfbfc;
  color: #8a939f;
  font-size: 16px;
  line-height: 22.4px;
  min-height: 100%;
}

form {
  width: 70%;
}

@media (min-width: 37.5em) {
  form {
    width: 100%;
  }
}

@media (max-width: 37.5em) {
  form {
    width: 100%;
  }
}

button,
input[type="submit"],
input[type="reset"] {
  background: #e9edef;
  border: 2px solid #ccd4da;
  border-bottom: 4px solid #ccd4da;
  padding: .5rem 2rem;
  border-radius: 3px;
  font-family: "sans-serif";
  cursor: pointer;
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
}

button:focus,
input[type="submit"]:focus,
input[type="reset"]:focus {
  outline: none;
}

button:active,
input[type="submit"]:active,
input[type="reset"]:active {
  background-color: #dbe0e4;
  border: 0;
  transition: background-color 300ms ease 50ms, border 300ms ease 50ms;
}

button:hover,
input[type="submit"]:hover,
input[type="reset"]:hover {
  background-color: #eceff1;
  border-color: #b4bfc9;
  transition: background-color 300ms ease 50ms, border 300ms ease 50ms;
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="search"],
input[type="tel"],
input[type="url"],
textarea {
  background: #fbfbfc;
  border: 2px solid #ccd4da;
  border-bottom: 4px solid #ccd4da;
  padding: .5rem 1rem;
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
  width: 70%;
  font-family: redacted;
  color: #8a939f;
}

input[type="text"]:focus,
input[type="password"]:focus,
input[type="email"]:focus,
input[type="search"]:focus,
input[type="tel"]:focus,
input[type="url"]:focus,
textarea:focus {
  outline: none;
}

input[type="text"]:active,
input[type="password"]:active,
input[type="email"]:active,
input[type="search"]:active,
input[type="tel"]:active,
input[type="url"]:active,
textarea:active {
  background-color: white;
  transition: background-color 300ms ease 50ms, border 300ms ease 50ms;
}

input[type="text"]:hover,
input[type="password"]:hover,
input[type="email"]:hover,
input[type="search"]:hover,
input[type="tel"]:hover,
input[type="url"]:hover,
textarea:hover {
  background-color: #fefefe;
  border-color: #b4bfc9;
  transition: background-color 300ms ease 50ms, border 300ms ease 50ms;
}

.control-group {
  display: inline-block;
  width: 100%;
  padding: 1rem;
  text-align: left;
  vertical-align: top;
}

.control {
  position: relative;
  display: block;
  margin-bottom: .5rem;
  padding-left: 2rem;
  cursor: pointer;
}

.control input {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

.control__indicator {
  position: absolute;
  top: 2px;
  left: 0;
  width: 20px;
  height: 20px;
  background: #e9edef;
}

.control--radio .control__indicator {
  border-radius: 50%;
}

.control:hover input ~ .control__indicator,
.control input:focus ~ .control__indicator {
  background: #8a939f;
}

.control input:checked ~ .control__indicator {
  background: #686f81;
}

.control:hover input:not([disabled]):checked ~ .control__indicator,
.control input:checked:focus ~ .control__indicator {
  background: #bdc7cf;
}

.control input:disabled ~ .control__indicator {
  pointer-events: none;
  opacity: .6;
  background: #bdc7cf;
}

.control__indicator:after {
  position: absolute;
  display: none;
  content: '';
}

.control input:checked ~ .control__indicator:after {
  display: block;
}

.control--checkbox .control__indicator:after {
  top: 4px;
  left: 8px;
  width: 3px;
  height: 8px;
  transform: rotate(45deg);
  border: solid #fff;
  border-width: 0 2px 2px 0;
}

.control--checkbox input:disabled ~ .control__indicator:after {
  border-color: #8a939f;
}

.control--radio .control__indicator:after {
  top: 7px;
  left: 7px;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: #fff;
}

.control--radio input:disabled ~ .control__indicator:after {
  background: #8a939f;
}

.select {
  position: relative;
  display: inline-block;
  width: 100%;
  margin-bottom: .5rem;
}

.select select {
  display: inline-block;
  width: 100%;
  padding: 10px 15px;
  cursor: pointer;
  color: #8a939f;
  border: 0;
  border-radius: 0;
  outline: 0;
  background: #e9edef;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.select select::-ms-expand {
  display: none;
}

.select select:hover,
.select select:focus {
  color: #8a939f;
  background: #f2f4f6;
}

.select select:disabled {
  pointer-events: none;
  opacity: .5;
}

.select__arrow {
  position: absolute;
  top: 16px;
  right: 15px;
  width: 0;
  height: 0;
  pointer-events: none;
  border-width: 8px 5px 0 5px;
  border-style: solid;
  border-color: #686f81 transparent transparent transparent;
}

.select select:hover ~ .select__arrow,
.select select:focus ~ .select__arrow {
  border-top-color: #686f81;
}

.select select:disabled ~ .select__arrow {
  border-top-color: #acb1bc;
}

table {
  border-collapse: collapse;
  width: 70%;
}

th {
  height: 2rem;
  background-color: #e9edef;
}

tr {
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
}

tr:hover {
  background-color: #f2f4f6;
  border-color: #aebac4;
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
}

table,
th,
td {
  border: 2px solid #ccd4da;
  padding: .5rem;
}

.logo {
  margin-right: auto;
  font-size: 2rem;
  margin-left: 20px;
  background-color: #8a939f;
}

.nav {
  min-height: 50px !important;
}

.noborder {
  border: 0 !important;
}

[data-balloon]:after,
[data-balloon]:before,
[data-balloon]:hover:before,
[data-balloon]:hover:before {
  font-family: sans-serif;
}

.container,
.nav {
  padding: 10px;
  border: 2px solid #bdc7cf;
  width: 90%;
  max-width: 90%;
  min-height: 200px;
  margin: 2rem auto;
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
}

@media (max-width: 37.5em) {
  .container,
  .nav {
    min-height: 120px;
    font-size: 50%;
    line-height: 180%;
  }
}

.container:hover,
.nav:hover {
  border-color: #aebac4;
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
}

.box,
.box2,
.box3,
.box4,
.box5 {
  padding: 1rem;
  border: 2px solid #ccd4da;
  margin: 1rem;
  height: 100px;
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
}

@media (min-width: 37.5em) {
  .box,
  .box2,
  .box3,
  .box4,
  .box5 {
    margin: 0.1rem;
  }
}

@media (max-width: 37.5em) {
  .box,
  .box2,
  .box3,
  .box4,
  .box5 {
    margin: 0.25rem;
  }
}

.box:hover,
.box2:hover,
.box3:hover,
.box4:hover,
.box5:hover {
  border-color: #aebac4;
  transition: background-color 300ms ease 50ms, border-color 300ms ease 50ms;
}

.box2 {
  width: 50%;
}

.box3 {
  width: 33.33333%;
}

.box4 {
  width: 25%;
}

@media (max-width: 37.5em) {
  .box4 {
    max-width: 50%;
    width: 50%;
  }
}

.box5 {
  width: 20%;
}

@media (max-width: 37.5em) {
  .box3,
  .box5 {
    max-width: 100%;
    width: 100%;
  }
}

.header {
  height: 350px;
  width: 100%;
  transition: background-color 300ms ease 50ms;
}

@media (min-width: 50em) {
  .header {
    height: 180px;
  }
}

@media (max-width: 37.5em) {
  .header {
    height: 120px;
  }
}

.header:hover {
  background-color: #c6cfd5;
  transition: background-color 300ms ease 50ms;
}

.products > div {
  height: 200px;
}

@media (max-width: 37.5em) {
  .products > div {
    height: 100px;
  }
}

/*# sourceMappingURL=data:application/json;base64, */
